/*
 This Source Code Form is subject to the terms of the Mozilla Public
 License, v. 2.0. If a copy of the MPL was not distributed with this
 file, You can obtain one at http://mozilla.org/MPL/2.0/. 
*/

/*!
  \mainpage notitle

  \section patate_about_sec About Patate

  Patate is a header only C++/CUDA library for graphics software released under the \ref patate_licensing_sec "MPL" license.
  
  This library provides a collection of Computer Graphics techniques that incorporate the latest innovations from <a href="http://www.inria.fr/" target="_blank"><b>INRIA</b></a> research teams working in the field. It strives for efficiency and ease-of-use by focusing on low-level core operators and key algorithms, organised in modules that each tackle a specific set of issues. The central goal of the library is to drastically reduce the time and efforts required to turn a research paper into a ready-to-use solution, for both commercial and academic purposes. Before coming down to the details and to make your mouth water a bit, expect to find here tools about multi-scale analysis, material appearance, vector graphics, expressive rendering and 2D animation.

  \section patate_meaning_section What does "Patate" mean ?

  “Patate” means potato in French; and like potatoes, modules are intended to provide tasty and nourishing features that are easy to incorporate into your own recipe|pipeline. All you will have to do is to gently dig into the documentation to learn how each patate works; tutorials and examples will give you basic recipes from which to start from. Although patates are intended to grow seperately from each other, they will reveal even richer flavours when cooked together; we provide some examples of such combinations.

  \section patate_overview_sec Overview

  In this section, you can find a list of different modules that are included in the library with a brief description. You can click on the images to see examples and what Patate is capable of :

  \subsection patate_overview_subsec_grenaille Grenaille

  \htmlonly
  <div class="dessin"><a href="grenaille_example2_page.html"><img src="images/thumbnails/grenaille_thumb.png" border="0px" width="180" height="150" alt=""/></a></div>
  \endhtmlonly

  Efficient fitting and analysis of point-clouds in arbitrary dimensions.
    
  The best way to get started is to go through the \ref grenaille_tutorial1. 
  You will discover some of the concepts that define the programming interface of the module.
  A concept is a set of requirements that a method has to fulfill, a bit like an interface in JAVA.
  For a detailed presentation of all available concepts, go to the Grenaille::Concept page.
 
  <div class="clear"></div>

  \section patate_instructions_sec Installation & Download

  See the \ref patate_getting_started_page section for mor informations.

  \section patate_licensing_sec Licensing

  The source code of the library is licensed under the Mozilla Public License (MPL), v. 2.0. Its main advantage is to grant inclusion of template files as long as the source code itself is not modified. For more details, a copy of the MPL can be found at <a href="http://mozilla.org/MPL/2.0/" target="_blank"> http://mozilla.org/MPL/2.0/ </a>.

  \section patate_citing_sec Citing
  
  The Patate library relies on published scientific papers that we have collected in a separate section of the documentation. These will prove invaluable resources if you want to dig into the implementation of operators and algorithms.
  
  Moreover, if the PatateLib contributes to a project that leads to a scientific publication or a commercial or free software, please acknowledge this fact by citing the project:
  \verbatim  
  @MISC{PatateLib,
    author = {Nicolas Mellado and Ga\"{e}l Guennebaud and Pascal Barla and others},
    title = {Patate Lib},
    howpublished = {http://patate.gforge.inria.fr/},
    year = {2013}
  }
  \endverbatim


  \section patate_credits_sec Credits

  Each patate is usually developped by a few persons, for which we will give a list once we have more than one patate.
  Our first and only patate for now is  #Grenaille, and it has been developped by Nicolas Mellado, Gael Guennebaud and Pascal Barla. Noam Kremen has also contributed to this work: testing on cuda compatibility and function to get signed curvature in Grenaille::GLSCurvatureHelper.

*/
